name: FoodGram

on: [push]

jobs:
  tests:
    name: Checking the project for errors
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8.5

      - name: Install dependencies
        run: | 
          pip install --upgrade pip && pip install -r project/requirements.txt 

      - name: Test with flake8 and pytest
        run: | 
          python -m flake8

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          push: true
          file: project/Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram:1.0

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          stack_file_name: docker-compose.yaml
          script: | 
            sudo docker-compose down 
            sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/foodgram:1.0 
            touch .env 
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env 
            echo DEBUG=${{ secrets.DEBUG }} >> .env 
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env 
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env 
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env 
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env 
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env 
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env 
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env 
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env 
            echo LANGUAGE_CODE=${{ secrets.LANGUAGE_CODE }} >> .env 
            echo TIME_ZONE=${{ secrets.TIME_ZONE }} >> .env 
            echo EMAIL_HOST=${{ secrets.EMAIL_HOST }} >> .env 
            echo EMAIL_PORT=${{ secrets.EMAIL_PORT }} >> .env 
            echo EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }} >> .env 
            echo EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }} >> .env 
            echo EMAIL_USE_TLS=${{ secrets.EMAIL_USE_TLS }} >> .env 
            echo EMAIL_USE_SSL=${{ secrets.EMAIL_USE_SSL }} >> .env 
            echo INTERNAL_IPS=${{ secrets.INTERNAL_IPS }} >> .env 
            sudo docker-compose up -d --build
